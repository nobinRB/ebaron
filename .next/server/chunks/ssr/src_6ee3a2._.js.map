{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/utils/countries.ts"],"sourcesContent":["export const countries = [\n  { code: 'IN', name: 'India' },\n  { code: 'US', name: 'United States' },\n  { code: 'GB', name: 'United Kingdom' },\n  { code: 'CA', name: 'Canada' },\n  { code: 'AU', name: 'Australia' },\n  // Add more countries as needed\n]; "],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IACvB;QAAE,MAAM;QAAM,MAAM;IAAQ;IAC5B;QAAE,MAAM;QAAM,MAAM;IAAgB;IACpC;QAAE,MAAM;QAAM,MAAM;IAAiB;IACrC;QAAE,MAAM;QAAM,MAAM;IAAS;IAC7B;QAAE,MAAM;QAAM,MAAM;IAAY;CAEjC"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/utils/indianLocations.ts"],"sourcesContent":["interface CityData {\n  [city: string]: string; // city name -> state name\n}\n\ninterface PincodeData {\n  [pincode: string]: {\n    city: string;\n    state: string;\n  };\n}\n\nexport const indianPincodes: PincodeData = {\n  // Mumbai, Maharashtra\n  \"400001\": { city: \"Mumbai\", state: \"Maharashtra\" },\n  \"400002\": { city: \"Mumbai\", state: \"Maharashtra\" },\n  \"400051\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Andheri\n  \"400053\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Bandra\n  \"400069\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Malad\n  \"400076\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Powai\n  \"400097\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Borivali\n  \"400049\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Kandivali\n  \"400064\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Goregaon\n  \"400055\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Santacruz\n  \"400058\": { city: \"Mumbai\", state: \"Maharashtra\" }, // Jogeshwari\n  \n  // Delhi\n  \"110001\": { city: \"Delhi\", state: \"Delhi\" },\n  \"110002\": { city: \"Delhi\", state: \"Delhi\" },\n  \"110020\": { city: \"Delhi\", state: \"Delhi\" }, // South Delhi\n  \"110034\": { city: \"Delhi\", state: \"Delhi\" }, // West Delhi\n  \"110044\": { city: \"Delhi\", state: \"Delhi\" }, // East Delhi\n  \"110092\": { city: \"Delhi\", state: \"Delhi\" }, // North Delhi\n  \"110075\": { city: \"Delhi\", state: \"Delhi\" }, // Dwarka\n  \"110085\": { city: \"Delhi\", state: \"Delhi\" }, // Rohini\n  \"110096\": { city: \"Delhi\", state: \"Delhi\" }, // Pitampura\n  \n  // Bangalore, Karnataka\n  \"560001\": { city: \"Bangalore\", state: \"Karnataka\" },\n  \"560002\": { city: \"Bangalore\", state: \"Karnataka\" },\n  \"560034\": { city: \"Bangalore\", state: \"Karnataka\" }, // JP Nagar\n  \"560037\": { city: \"Bangalore\", state: \"Karnataka\" }, // Jayanagar\n  \"560043\": { city: \"Bangalore\", state: \"Karnataka\" }, // Whitefield\n  \"560066\": { city: \"Bangalore\", state: \"Karnataka\" }, // Electronic City\n  \"560095\": { city: \"Bangalore\", state: \"Karnataka\" }, // Marathahalli\n  \"560064\": { city: \"Bangalore\", state: \"Karnataka\" }, // Bannerghatta\n  \"560103\": { city: \"Bangalore\", state: \"Karnataka\" }, // Bellandur\n  \"560048\": { city: \"Bangalore\", state: \"Karnataka\" }, // Malleswaram\n  \"560011\": { city: \"Bangalore\", state: \"Karnataka\" }, // Koramangala\n  \n  // Hyderabad, Telangana\n  \"500001\": { city: \"Hyderabad\", state: \"Telangana\" },\n  \"500002\": { city: \"Hyderabad\", state: \"Telangana\" },\n  \"500032\": { city: \"Hyderabad\", state: \"Telangana\" }, // Secunderabad\n  \"500034\": { city: \"Hyderabad\", state: \"Telangana\" }, // Banjara Hills\n  \"500081\": { city: \"Hyderabad\", state: \"Telangana\" }, // Hi-Tech City\n  \"500084\": { city: \"Hyderabad\", state: \"Telangana\" }, // Gachibowli\n  \"500072\": { city: \"Hyderabad\", state: \"Telangana\" }, // Kukatpally\n  \"500045\": { city: \"Hyderabad\", state: \"Telangana\" }, // Jubilee Hills\n  \"500018\": { city: \"Hyderabad\", state: \"Telangana\" }, // Ameerpet\n  \n  // Chennai, Tamil Nadu\n  \"600001\": { city: \"Chennai\", state: \"Tamil Nadu\" },\n  \"600002\": { city: \"Chennai\", state: \"Tamil Nadu\" },\n  \"600040\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // T Nagar\n  \"600042\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // Anna Nagar\n  \"600096\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // Velachery\n  \"600119\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // OMR\n  \"600095\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // Sholinganallur\n  \"600097\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // Tambaram\n  \"600028\": { city: \"Chennai\", state: \"Tamil Nadu\" }, // Adyar\n  \n  // Kolkata, West Bengal\n  \"700001\": { city: \"Kolkata\", state: \"West Bengal\" },\n  \"700002\": { city: \"Kolkata\", state: \"West Bengal\" },\n  \"700019\": { city: \"Kolkata\", state: \"West Bengal\" }, // Ballygunge\n  \"700064\": { city: \"Kolkata\", state: \"West Bengal\" }, // Salt Lake\n  \"700091\": { city: \"Kolkata\", state: \"West Bengal\" }, // New Town\n  \"700053\": { city: \"Kolkata\", state: \"West Bengal\" }, // Park Street\n  \"700028\": { city: \"Kolkata\", state: \"West Bengal\" }, // Alipore\n  \"700061\": { city: \"Kolkata\", state: \"West Bengal\" }, // Howrah\n  \n  // Kerala\n  \"682001\": { city: \"Kochi\", state: \"Kerala\" }, // Ernakulam\n  \"682002\": { city: \"Kochi\", state: \"Kerala\" },\n  \"682020\": { city: \"Kochi\", state: \"Kerala\" }, // Kakkanad\n  \"682024\": { city: \"Kochi\", state: \"Kerala\" }, // Fort Kochi\n  \"682030\": { city: \"Kochi\", state: \"Kerala\" }, // Aluva\n  \"682037\": { city: \"Kochi\", state: \"Kerala\" }, // Tripunithura\n  \"695001\": { city: \"Thiruvananthapuram\", state: \"Kerala\" },\n  \"695002\": { city: \"Thiruvananthapuram\", state: \"Kerala\" },\n  \"695011\": { city: \"Thiruvananthapuram\", state: \"Kerala\" }, // Technopark\n  \"695024\": { city: \"Thiruvananthapuram\", state: \"Kerala\" }, // Kovalam\n  \"673001\": { city: \"Kozhikode\", state: \"Kerala\" },\n  \"673002\": { city: \"Kozhikode\", state: \"Kerala\" },\n  \"673004\": { city: \"Kozhikode\", state: \"Kerala\" }, // Beach Road\n  \"673014\": { city: \"Kozhikode\", state: \"Kerala\" }, // Cyber Park\n  \"680001\": { city: \"Thrissur\", state: \"Kerala\" },\n  \"680002\": { city: \"Thrissur\", state: \"Kerala\" },\n  \"680021\": { city: \"Thrissur\", state: \"Kerala\" }, // Ayyanthole\n  \"686001\": { city: \"Kottayam\", state: \"Kerala\" },\n  \"686002\": { city: \"Kottayam\", state: \"Kerala\" },\n  \"679101\": { city: \"Palakkad\", state: \"Kerala\" },\n  \"679102\": { city: \"Palakkad\", state: \"Kerala\" },\n  \n  // Gujarat\n  \"380001\": { city: \"Ahmedabad\", state: \"Gujarat\" },\n  \"380002\": { city: \"Ahmedabad\", state: \"Gujarat\" },\n  \"380015\": { city: \"Ahmedabad\", state: \"Gujarat\" }, // Satellite\n  \"380054\": { city: \"Ahmedabad\", state: \"Gujarat\" }, // Bopal\n  \"380061\": { city: \"Ahmedabad\", state: \"Gujarat\" }, // SG Highway\n  \"395001\": { city: \"Surat\", state: \"Gujarat\" },\n  \"395002\": { city: \"Surat\", state: \"Gujarat\" },\n  \"395007\": { city: \"Surat\", state: \"Gujarat\" }, // Adajan\n  \"395009\": { city: \"Surat\", state: \"Gujarat\" }, // Vesu\n  \"390001\": { city: \"Vadodara\", state: \"Gujarat\" },\n  \"390002\": { city: \"Vadodara\", state: \"Gujarat\" },\n  \"390007\": { city: \"Vadodara\", state: \"Gujarat\" }, // Alkapuri\n  \"390023\": { city: \"Vadodara\", state: \"Gujarat\" }, // Gotri\n  \n  // Uttar Pradesh\n  \"226001\": { city: \"Lucknow\", state: \"Uttar Pradesh\" },\n  \"226002\": { city: \"Lucknow\", state: \"Uttar Pradesh\" },\n  \"226010\": { city: \"Lucknow\", state: \"Uttar Pradesh\" }, // Gomti Nagar\n  \"226016\": { city: \"Lucknow\", state: \"Uttar Pradesh\" }, // Hazratganj\n  \"201301\": { city: \"Noida\", state: \"Uttar Pradesh\" },\n  \"201304\": { city: \"Noida\", state: \"Uttar Pradesh\" }, // Sector 62\n  \"201307\": { city: \"Greater Noida\", state: \"Uttar Pradesh\" },\n  \"201308\": { city: \"Greater Noida\", state: \"Uttar Pradesh\" },\n  \"201310\": { city: \"Greater Noida\", state: \"Uttar Pradesh\" }, // Knowledge Park\n  \"208001\": { city: \"Kanpur\", state: \"Uttar Pradesh\" },\n  \"208002\": { city: \"Kanpur\", state: \"Uttar Pradesh\" },\n  \"221001\": { city: \"Varanasi\", state: \"Uttar Pradesh\" },\n  \"221002\": { city: \"Varanasi\", state: \"Uttar Pradesh\" },\n  \n  // Rajasthan\n  \"302001\": { city: \"Jaipur\", state: \"Rajasthan\" },\n  \"302002\": { city: \"Jaipur\", state: \"Rajasthan\" },\n  \"302015\": { city: \"Jaipur\", state: \"Rajasthan\" }, // Malviya Nagar\n  \"302017\": { city: \"Jaipur\", state: \"Rajasthan\" }, // Vaishali Nagar\n  \"302020\": { city: \"Jaipur\", state: \"Rajasthan\" }, // Mansarovar\n  \"302033\": { city: \"Jaipur\", state: \"Rajasthan\" }, // C-Scheme\n  \"313001\": { city: \"Udaipur\", state: \"Rajasthan\" },\n  \"313002\": { city: \"Udaipur\", state: \"Rajasthan\" },\n  \"342001\": { city: \"Jodhpur\", state: \"Rajasthan\" },\n  \"342002\": { city: \"Jodhpur\", state: \"Rajasthan\" },\n  \n  // Punjab & Chandigarh\n  \"160001\": { city: \"Chandigarh\", state: \"Punjab\" },\n  \"160002\": { city: \"Chandigarh\", state: \"Punjab\" },\n  \"160017\": { city: \"Chandigarh\", state: \"Punjab\" }, // IT Park\n  \"160036\": { city: \"Chandigarh\", state: \"Punjab\" }, // Industrial Area\n  \"160047\": { city: \"Chandigarh\", state: \"Punjab\" }, // Manimajra\n  \"141001\": { city: \"Ludhiana\", state: \"Punjab\" },\n  \"141002\": { city: \"Ludhiana\", state: \"Punjab\" },\n  \"144001\": { city: \"Jalandhar\", state: \"Punjab\" },\n  \"144002\": { city: \"Jalandhar\", state: \"Punjab\" },\n  \"143001\": { city: \"Amritsar\", state: \"Punjab\" },\n  \"143002\": { city: \"Amritsar\", state: \"Punjab\" },\n  \n  // Madhya Pradesh\n  \"462001\": { city: \"Bhopal\", state: \"Madhya Pradesh\" },\n  \"462002\": { city: \"Bhopal\", state: \"Madhya Pradesh\" },\n  \"462016\": { city: \"Bhopal\", state: \"Madhya Pradesh\" }, // Arera Colony\n  \"462026\": { city: \"Bhopal\", state: \"Madhya Pradesh\" }, // MP Nagar\n  \"452001\": { city: \"Indore\", state: \"Madhya Pradesh\" },\n  \"452002\": { city: \"Indore\", state: \"Madhya Pradesh\" },\n  \"452010\": { city: \"Indore\", state: \"Madhya Pradesh\" }, // Vijay Nagar\n  \"452018\": { city: \"Indore\", state: \"Madhya Pradesh\" }, // Palasia\n  \"482001\": { city: \"Jabalpur\", state: \"Madhya Pradesh\" },\n  \"482002\": { city: \"Jabalpur\", state: \"Madhya Pradesh\" },\n  \"485001\": { city: \"Gwalior\", state: \"Madhya Pradesh\" },\n  \"485002\": { city: \"Gwalior\", state: \"Madhya Pradesh\" },\n  \n  // Karnataka (Additional cities)\n  \"570001\": { city: \"Mysore\", state: \"Karnataka\" },\n  \"570002\": { city: \"Mysore\", state: \"Karnataka\" },\n  \"570020\": { city: \"Mysore\", state: \"Karnataka\" }, // Vijayanagar\n  \"580001\": { city: \"Hubli\", state: \"Karnataka\" },\n  \"580002\": { city: \"Hubli\", state: \"Karnataka\" },\n  \"580020\": { city: \"Hubli\", state: \"Karnataka\" }, // Vidyanagar\n  \"590001\": { city: \"Belgaum\", state: \"Karnataka\" },\n  \"590002\": { city: \"Belgaum\", state: \"Karnataka\" },\n  \"575001\": { city: \"Mangalore\", state: \"Karnataka\" },\n  \"575002\": { city: \"Mangalore\", state: \"Karnataka\" },\n  \n  // Maharashtra (Additional cities)\n  \"440001\": { city: \"Nagpur\", state: \"Maharashtra\" },\n  \"440002\": { city: \"Nagpur\", state: \"Maharashtra\" },\n  \"440010\": { city: \"Nagpur\", state: \"Maharashtra\" }, // Dharampeth\n  \"440022\": { city: \"Nagpur\", state: \"Maharashtra\" }, // Ramdaspeth\n  \"411001\": { city: \"Pune\", state: \"Maharashtra\" },\n  \"411002\": { city: \"Pune\", state: \"Maharashtra\" },\n  \"411014\": { city: \"Pune\", state: \"Maharashtra\" }, // Hinjewadi\n  \"411027\": { city: \"Pune\", state: \"Maharashtra\" }, // Hadapsar\n  \"411057\": { city: \"Pune\", state: \"Maharashtra\" }, // Wakad\n  \"411006\": { city: \"Pune\", state: \"Maharashtra\" }, // Deccan\n  \"411004\": { city: \"Pune\", state: \"Maharashtra\" }, // Camp\n  \"431001\": { city: \"Aurangabad\", state: \"Maharashtra\" },\n  \"431002\": { city: \"Aurangabad\", state: \"Maharashtra\" },\n  \"400614\": { city: \"Navi Mumbai\", state: \"Maharashtra\" }, // Vashi\n  \"400705\": { city: \"Navi Mumbai\", state: \"Maharashtra\" }  // Kharghar\n};\n\nexport const indianCities: CityData = {\n  \"Mumbai\": \"Maharashtra\",\n  \"Navi Mumbai\": \"Maharashtra\",\n  \"Delhi\": \"Delhi\",\n  \"Bangalore\": \"Karnataka\",\n  \"Hyderabad\": \"Telangana\",\n  \"Chennai\": \"Tamil Nadu\",\n  \"Kolkata\": \"West Bengal\",\n  \"Pune\": \"Maharashtra\",\n  \"Ahmedabad\": \"Gujarat\",\n  \"Surat\": \"Gujarat\",\n  \"Vadodara\": \"Gujarat\",\n  \"Lucknow\": \"Uttar Pradesh\",\n  \"Kanpur\": \"Uttar Pradesh\",\n  \"Varanasi\": \"Uttar Pradesh\",\n  \"Noida\": \"Uttar Pradesh\",\n  \"Greater Noida\": \"Uttar Pradesh\",\n  \"Jaipur\": \"Rajasthan\",\n  \"Udaipur\": \"Rajasthan\",\n  \"Jodhpur\": \"Rajasthan\",\n  \"Kochi\": \"Kerala\",\n  \"Thiruvananthapuram\": \"Kerala\",\n  \"Kozhikode\": \"Kerala\",\n  \"Thrissur\": \"Kerala\",\n  \"Kottayam\": \"Kerala\",\n  \"Palakkad\": \"Kerala\",\n  \"Bhopal\": \"Madhya Pradesh\",\n  \"Indore\": \"Madhya Pradesh\",\n  \"Jabalpur\": \"Madhya Pradesh\",\n  \"Gwalior\": \"Madhya Pradesh\",\n  \"Chandigarh\": \"Punjab\",\n  \"Ludhiana\": \"Punjab\",\n  \"Jalandhar\": \"Punjab\",\n  \"Amritsar\": \"Punjab\",\n  \"Coimbatore\": \"Tamil Nadu\",\n  \"Mysore\": \"Karnataka\",\n  \"Hubli\": \"Karnataka\",\n  \"Belgaum\": \"Karnataka\",\n  \"Mangalore\": \"Karnataka\",\n  \"Nagpur\": \"Maharashtra\",\n  \"Aurangabad\": \"Maharashtra\",\n  \"Visakhapatnam\": \"Andhra Pradesh\"\n};\n\nexport const indianStates = Array.from(new Set(Object.values(indianCities))).sort();\n\nexport function getStateFromCity(city: string): string | undefined {\n  return indianCities[city];\n}\n\nexport function getCitySuggestions(input: string): string[] {\n  const inputLower = input.toLowerCase();\n  return Object.keys(indianCities)\n    .filter(city => city.toLowerCase().includes(inputLower))\n    .sort();\n}\n\nexport function getLocationFromPincode(pincode: string): { city: string; state: string } | undefined {\n  return indianPincodes[pincode];\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/components/checkout/BillingAddressForm.tsx"],"sourcesContent":["'use client';\n\nimport { countries } from '@/utils/countries';\nimport { ValidationError } from '@/utils/validation';\nimport { getCitySuggestions, getStateFromCity, getLocationFromPincode } from '@/utils/indianLocations';\nimport { useState } from 'react';\n\ninterface BillingAddressFormProps {\n  formData: {\n    billingName: string;\n    billingEmail: string;\n    billingPhone: string;\n    billingAddress: string;\n    billingCity: string;\n    billingState: string;\n    billingPincode: string;\n    billingCountry: string;\n  };\n  handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n  handleBlur: (e: React.FocusEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n  getInputClassName: (fieldName: string) => string;\n  errors: ValidationError;\n  touched: { [key: string]: boolean };\n}\n\nexport default function BillingAddressForm({ \n  formData, \n  handleChange, \n  handleBlur,\n  getInputClassName,\n  errors,\n  touched \n}: BillingAddressFormProps) {\n  const [citySuggestions, setCitySuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const handleCityInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(e);\n    \n    if (formData.billingCountry === 'IN') {\n      const suggestions = getCitySuggestions(e.target.value);\n      setCitySuggestions(suggestions);\n      setShowSuggestions(true);\n    }\n  };\n\n  const handleCitySelect = (city: string) => {\n    const state = getStateFromCity(city);\n    \n    // Simulate change events for both city and state\n    const cityEvent = {\n      target: { name: 'billingCity', value: city }\n    } as React.ChangeEvent<HTMLInputElement>;\n    \n    handleChange(cityEvent);\n    \n    if (state) {\n      const stateEvent = {\n        target: { name: 'billingState', value: state }\n      } as React.ChangeEvent<HTMLInputElement>;\n      \n      handleChange(stateEvent);\n    }\n    \n    setShowSuggestions(false);\n  };\n\n  const handlePincodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(e);\n    \n    const { value } = e.target;\n    if (formData.billingCountry === 'IN' && value.length === 6) {\n      const location = getLocationFromPincode(value);\n      if (location) {\n        // Simulate change events for city and state\n        const cityEvent = {\n          target: { name: 'billingCity', value: location.city }\n        } as React.ChangeEvent<HTMLInputElement>;\n        \n        const stateEvent = {\n          target: { name: 'billingState', value: location.state }\n        } as React.ChangeEvent<HTMLInputElement>;\n        \n        handleChange(cityEvent);\n        handleChange(stateEvent);\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-medium text-gray-900\">Billing Address</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Full Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"billingName\"\n            value={formData.billingName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingName')}\n            required\n          />\n          {touched.billingName && errors.billingName && (\n            <div className=\"text-sm text-red-500\">{errors.billingName}</div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"billingEmail\"\n            value={formData.billingEmail}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingEmail')}\n            required\n          />\n          {touched.billingEmail && errors.billingEmail && (\n            <div className=\"text-sm text-red-500\">{errors.billingEmail}</div>\n          )}\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Phone Number\n          </label>\n          <input\n            type=\"tel\"\n            name=\"billingPhone\"\n            value={formData.billingPhone}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingPhone')}\n            required\n          />\n          {touched.billingPhone && errors.billingPhone && (\n            <div className=\"text-sm text-red-500\">{errors.billingPhone}</div>\n          )}\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Address\n          </label>\n          <textarea\n            name=\"billingAddress\"\n            value={formData.billingAddress}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            rows={3}\n            className={getInputClassName('billingAddress')}\n            required\n          />\n          {touched.billingAddress && errors.billingAddress && (\n            <div className=\"text-sm text-red-500\">{errors.billingAddress}</div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Country\n          </label>\n          <select\n            name=\"billingCountry\"\n            value={formData.billingCountry}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingCountry')}\n            required\n          >\n            {countries.map(country => (\n              <option key={country.code} value={country.code}>\n                {country.name}\n              </option>\n            ))}\n          </select>\n          {touched.billingCountry && errors.billingCountry && (\n            <div className=\"text-sm text-red-500\">{errors.billingCountry}</div>\n          )}\n        </div>\n\n        <div className=\"relative\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            City\n          </label>\n          <input\n            type=\"text\"\n            name=\"billingCity\"\n            value={formData.billingCity}\n            onChange={handleCityInputChange}\n            onBlur={(e) => {\n              setTimeout(() => setShowSuggestions(false), 200);\n              handleBlur(e);\n            }}\n            className={getInputClassName('billingCity')}\n            required\n          />\n          {showSuggestions && formData.billingCountry === 'IN' && citySuggestions.length > 0 && (\n            <ul className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-auto\">\n              {citySuggestions.map((city) => (\n                <li\n                  key={city}\n                  className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer text-black\"\n                  onClick={() => handleCitySelect(city)}\n                >\n                  {city}\n                </li>\n              ))}\n            </ul>\n          )}\n          {touched.billingCity && errors.billingCity && (\n            <div className=\"text-sm text-red-500\">{errors.billingCity}</div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            State\n          </label>\n          <input\n            type=\"text\"\n            name=\"billingState\"\n            value={formData.billingState}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingState')}\n            required\n            readOnly={formData.billingCountry === 'IN'}\n          />\n          {touched.billingState && errors.billingState && (\n            <div className=\"text-sm text-red-500\">{errors.billingState}</div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Pincode\n          </label>\n          <input\n            type=\"text\"\n            name=\"billingPincode\"\n            value={formData.billingPincode}\n            onChange={handlePincodeChange}\n            onBlur={handleBlur}\n            className={getInputClassName('billingPincode')}\n            maxLength={6}\n            required\n          />\n          {touched.billingPincode && errors.billingPincode && (\n            <div className=\"text-sm text-red-500\">{errors.billingPincode}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;AAyBe,SAAS,mBAAmB,EACzC,QAAQ,EACR,YAAY,EACZ,UAAU,EACV,iBAAiB,EACjB,MAAM,EACN,OAAO,EACiB;IACxB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,wBAAwB,CAAC;QAC7B,aAAa;QAEb,IAAI,SAAS,cAAc,KAAK,MAAM;YACpC,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,qBAAkB,AAAD,EAAE,EAAE,MAAM,CAAC,KAAK;YACrD,mBAAmB;YACnB,mBAAmB;QACrB;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,CAAA,GAAA,+HAAA,CAAA,mBAAgB,AAAD,EAAE;QAE/B,iDAAiD;QACjD,MAAM,YAAY;YAChB,QAAQ;gBAAE,MAAM;gBAAe,OAAO;YAAK;QAC7C;QAEA,aAAa;QAEb,IAAI,OAAO;YACT,MAAM,aAAa;gBACjB,QAAQ;oBAAE,MAAM;oBAAgB,OAAO;gBAAM;YAC/C;YAEA,aAAa;QACf;QAEA,mBAAmB;IACrB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,aAAa;QAEb,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAC1B,IAAI,SAAS,cAAc,KAAK,QAAQ,MAAM,MAAM,KAAK,GAAG;YAC1D,MAAM,WAAW,CAAA,GAAA,+HAAA,CAAA,yBAAsB,AAAD,EAAE;YACxC,IAAI,UAAU;gBACZ,4CAA4C;gBAC5C,MAAM,YAAY;oBAChB,QAAQ;wBAAE,MAAM;wBAAe,OAAO,SAAS,IAAI;oBAAC;gBACtD;gBAEA,MAAM,aAAa;oBACjB,QAAQ;wBAAE,MAAM;wBAAgB,OAAO,SAAS,KAAK;oBAAC;gBACxD;gBAEA,aAAa;gBACb,aAAa;YACf;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAoC;;;;;;0BAElD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,WAAW;gCAC3B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,QAAQ;;;;;;4BAET,QAAQ,WAAW,IAAI,OAAO,WAAW,kBACxC,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,WAAW;;;;;;;;;;;;kCAI7D,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,YAAY;gCAC5B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,QAAQ;;;;;;4BAET,QAAQ,YAAY,IAAI,OAAO,YAAY,kBAC1C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;kCAI9D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,YAAY;gCAC5B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,QAAQ;;;;;;4BAET,QAAQ,YAAY,IAAI,OAAO,YAAY,kBAC1C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;kCAI9D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,OAAO,SAAS,cAAc;gCAC9B,UAAU;gCACV,QAAQ;gCACR,MAAM;gCACN,WAAW,kBAAkB;gCAC7B,QAAQ;;;;;;4BAET,QAAQ,cAAc,IAAI,OAAO,cAAc,kBAC9C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,cAAc;;;;;;;;;;;;kCAIhE,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,OAAO,SAAS,cAAc;gCAC9B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,QAAQ;0CAEP,yHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAA,wBACb,8OAAC;wCAA0B,OAAO,QAAQ,IAAI;kDAC3C,QAAQ,IAAI;uCADF,QAAQ,IAAI;;;;;;;;;;4BAK5B,QAAQ,cAAc,IAAI,OAAO,cAAc,kBAC9C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,cAAc;;;;;;;;;;;;kCAIhE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,WAAW;gCAC3B,UAAU;gCACV,QAAQ,CAAC;oCACP,WAAW,IAAM,mBAAmB,QAAQ;oCAC5C,WAAW;gCACb;gCACA,WAAW,kBAAkB;gCAC7B,QAAQ;;;;;;4BAET,mBAAmB,SAAS,cAAc,KAAK,QAAQ,gBAAgB,MAAM,GAAG,mBAC/E,8OAAC;gCAAG,WAAU;0CACX,gBAAgB,GAAG,CAAC,CAAC,qBACpB,8OAAC;wCAEC,WAAU;wCACV,SAAS,IAAM,iBAAiB;kDAE/B;uCAJI;;;;;;;;;;4BASZ,QAAQ,WAAW,IAAI,OAAO,WAAW,kBACxC,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,WAAW;;;;;;;;;;;;kCAI7D,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,YAAY;gCAC5B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,QAAQ;gCACR,UAAU,SAAS,cAAc,KAAK;;;;;;4BAEvC,QAAQ,YAAY,IAAI,OAAO,YAAY,kBAC1C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;kCAI9D,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,MAAK;gCACL,OAAO,SAAS,cAAc;gCAC9B,UAAU;gCACV,QAAQ;gCACR,WAAW,kBAAkB;gCAC7B,WAAW;gCACX,QAAQ;;;;;;4BAET,QAAQ,cAAc,IAAI,OAAO,cAAc,kBAC9C,8OAAC;gCAAI,WAAU;0CAAwB,OAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;AAMxE"}},
    {"offset": {"line": 1192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1198, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/utils/validation.ts"],"sourcesContent":["export const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const validatePhone = (phone: string): boolean => {\n  const phoneRegex = /^\\+?[1-9]\\d{9,14}$/;\n  return phoneRegex.test(phone);\n};\n\nexport const validatePincode = (pincode: string): boolean => {\n  const pincodeRegex = /^\\d{6}$/;  // 6-digit pincode for India\n  return pincodeRegex.test(pincode);\n};\n\nexport const validateRequired = (value: string): boolean => {\n  return value.trim().length > 0;\n};\n\nexport interface ValidationError {\n  [key: string]: string;\n}\n\nexport const validateCheckoutForm = (formData: any) => {\n  const errors: ValidationError = {};\n\n  // Shipping validation\n  if (!validateRequired(formData.shippingName)) {\n    errors.shippingName = 'Name is required';\n  }\n  if (!validateEmail(formData.shippingEmail)) {\n    errors.shippingEmail = 'Invalid email address';\n  }\n  if (!validatePhone(formData.shippingPhone)) {\n    errors.shippingPhone = 'Invalid phone number';\n  }\n  if (!validateRequired(formData.shippingAddress)) {\n    errors.shippingAddress = 'Address is required';\n  }\n  if (!validateRequired(formData.shippingCity)) {\n    errors.shippingCity = 'City is required';\n  }\n  if (!validateRequired(formData.shippingState)) {\n    errors.shippingState = 'State is required';\n  }\n  if (!validatePincode(formData.shippingPincode)) {\n    errors.shippingPincode = 'Invalid pincode';\n  }\n  if (!validateRequired(formData.shippingCountry)) {\n    errors.shippingCountry = 'Country is required';\n  }\n\n  // Billing validation\n  if (!validateRequired(formData.billingName)) {\n    errors.billingName = 'Name is required';\n  }\n  if (!validateEmail(formData.billingEmail)) {\n    errors.billingEmail = 'Invalid email address';\n  }\n  if (!validatePhone(formData.billingPhone)) {\n    errors.billingPhone = 'Invalid phone number';\n  }\n  if (!validateRequired(formData.billingAddress)) {\n    errors.billingAddress = 'Address is required';\n  }\n  if (!validateRequired(formData.billingCity)) {\n    errors.billingCity = 'City is required';\n  }\n  if (!validateRequired(formData.billingState)) {\n    errors.billingState = 'State is required';\n  }\n  if (!validatePincode(formData.billingPincode)) {\n    errors.billingPincode = 'Invalid pincode';\n  }\n  if (!validateRequired(formData.billingCountry)) {\n    errors.billingCountry = 'Country is required';\n  }\n\n  return errors;\n};\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AAEO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AAEO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,eAAe,WAAY,4BAA4B;IAC7D,OAAO,aAAa,IAAI,CAAC;AAC3B;AAEO,MAAM,mBAAmB,CAAC;IAC/B,OAAO,MAAM,IAAI,GAAG,MAAM,GAAG;AAC/B;AAMO,MAAM,uBAAuB,CAAC;IACnC,MAAM,SAA0B,CAAC;IAEjC,sBAAsB;IACtB,IAAI,CAAC,iBAAiB,SAAS,YAAY,GAAG;QAC5C,OAAO,YAAY,GAAG;IACxB;IACA,IAAI,CAAC,cAAc,SAAS,aAAa,GAAG;QAC1C,OAAO,aAAa,GAAG;IACzB;IACA,IAAI,CAAC,cAAc,SAAS,aAAa,GAAG;QAC1C,OAAO,aAAa,GAAG;IACzB;IACA,IAAI,CAAC,iBAAiB,SAAS,eAAe,GAAG;QAC/C,OAAO,eAAe,GAAG;IAC3B;IACA,IAAI,CAAC,iBAAiB,SAAS,YAAY,GAAG;QAC5C,OAAO,YAAY,GAAG;IACxB;IACA,IAAI,CAAC,iBAAiB,SAAS,aAAa,GAAG;QAC7C,OAAO,aAAa,GAAG;IACzB;IACA,IAAI,CAAC,gBAAgB,SAAS,eAAe,GAAG;QAC9C,OAAO,eAAe,GAAG;IAC3B;IACA,IAAI,CAAC,iBAAiB,SAAS,eAAe,GAAG;QAC/C,OAAO,eAAe,GAAG;IAC3B;IAEA,qBAAqB;IACrB,IAAI,CAAC,iBAAiB,SAAS,WAAW,GAAG;QAC3C,OAAO,WAAW,GAAG;IACvB;IACA,IAAI,CAAC,cAAc,SAAS,YAAY,GAAG;QACzC,OAAO,YAAY,GAAG;IACxB;IACA,IAAI,CAAC,cAAc,SAAS,YAAY,GAAG;QACzC,OAAO,YAAY,GAAG;IACxB;IACA,IAAI,CAAC,iBAAiB,SAAS,cAAc,GAAG;QAC9C,OAAO,cAAc,GAAG;IAC1B;IACA,IAAI,CAAC,iBAAiB,SAAS,WAAW,GAAG;QAC3C,OAAO,WAAW,GAAG;IACvB;IACA,IAAI,CAAC,iBAAiB,SAAS,YAAY,GAAG;QAC5C,OAAO,YAAY,GAAG;IACxB;IACA,IAAI,CAAC,gBAAgB,SAAS,cAAc,GAAG;QAC7C,OAAO,cAAc,GAAG;IAC1B;IACA,IAAI,CAAC,iBAAiB,SAAS,cAAc,GAAG;QAC9C,OAAO,cAAc,GAAG;IAC1B;IAEA,OAAO;AACT"}},
    {"offset": {"line": 1274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/components/checkout/CheckoutForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport BillingAddressForm from './BillingAddressForm';\nimport { FaCreditCard } from 'react-icons/fa6';\nimport { BiMoney } from 'react-icons/bi';\nimport { countries } from '@/utils/countries';\nimport { validateCheckoutForm, ValidationError } from '@/utils/validation';\nimport { getCitySuggestions, getStateFromCity, getLocationFromPincode } from '@/utils/indianLocations';\n\ninterface CheckoutFormData {\n  // Shipping details\n  shippingName: string;\n  shippingEmail: string;\n  shippingPhone: string;\n  shippingAddress: string;\n  shippingCity: string;\n  shippingState: string;\n  shippingPincode: string;\n  shippingCountry: string;\n  // Billing details\n  billingName: string;\n  billingEmail: string;\n  billingPhone: string;\n  billingAddress: string;\n  billingCity: string;\n  billingState: string;\n  billingPincode: string;\n  billingCountry: string;\n  // Payment details\n  paymentMethod: 'cod' | 'razorpay';\n}\n\nexport default function CheckoutForm() {\n  const [formData, setFormData] = useState<CheckoutFormData>({\n    // Shipping details\n    shippingName: '',\n    shippingEmail: '',\n    shippingPhone: '',\n    shippingAddress: '',\n    shippingCity: '',\n    shippingState: '',\n    shippingPincode: '',\n    shippingCountry: 'IN',\n    // Billing details\n    billingName: '',\n    billingEmail: '',\n    billingPhone: '',\n    billingAddress: '',\n    billingCity: '',\n    billingState: '',\n    billingPincode: '',\n    billingCountry: 'IN',\n    // Payment method\n    paymentMethod: 'cod',\n  });\n\n  const [sameAsShipping, setSameAsShipping] = useState(true);\n  const [errors, setErrors] = useState<ValidationError>({});\n  const [touched, setTouched] = useState<{ [key: string]: boolean }>({});\n  const [citySuggestions, setCitySuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const validateField = (name: string, value: string) => {\n    const tempFormData = { ...formData, [name]: value };\n    const validationErrors = validateCheckoutForm(tempFormData);\n    setErrors(prev => ({ ...prev, [name]: validationErrors[name] }));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    validateField(name, value);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name } = e.target;\n    setTouched(prev => ({ ...prev, [name]: true }));\n    validateField(name, formData[name as keyof CheckoutFormData]);\n  };\n\n  const handleSameAsShippingChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = e.target.checked;\n    setSameAsShipping(checked);\n    \n    if (checked) {\n      const newFormData = {\n        ...formData,\n        billingName: formData.shippingName,\n        billingEmail: formData.shippingEmail,\n        billingPhone: formData.shippingPhone,\n        billingAddress: formData.shippingAddress,\n        billingCity: formData.shippingCity,\n        billingState: formData.shippingState,\n        billingPincode: formData.shippingPincode,\n        billingCountry: formData.shippingCountry,\n      };\n      setFormData(newFormData);\n      const validationErrors = validateCheckoutForm(newFormData);\n      setErrors(validationErrors);\n    }\n  };\n\n  const handleShippingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => {\n      if (name === 'paymentMethod') {\n        const paymentValue = value as string;\n        if (paymentValue !== 'cod' && paymentValue !== 'razorpay') {\n          return prev;\n        }\n        return { ...prev, [name]: paymentValue };\n      }\n\n      const newState = { ...prev, [name]: value };\n      \n      if (sameAsShipping) {\n        const billingField = name.replace('shipping', 'billing') as keyof CheckoutFormData;\n        newState[billingField] = value;\n      }\n      \n      return newState;\n    });\n    validateField(name, value);\n  };\n\n  const handleCityInputChange = (e: React.ChangeEvent<HTMLInputElement>, type: 'shipping' | 'billing') => {\n    const { value } = e.target;\n    const fieldPrefix = type === 'shipping' ? 'shipping' : 'billing';\n    \n    setFormData(prev => ({\n      ...prev,\n      [`${fieldPrefix}City`]: value\n    }));\n\n    if (formData[`${fieldPrefix}Country` as keyof CheckoutFormData] === 'IN') {\n      const suggestions = getCitySuggestions(value);\n      setCitySuggestions(suggestions);\n      setShowSuggestions(true);\n    }\n  };\n\n  const handleCitySelect = (city: string, type: 'shipping' | 'billing') => {\n    const fieldPrefix = type === 'shipping' ? 'shipping' : 'billing';\n    const state = getStateFromCity(city);\n    \n    setFormData(prev => ({\n      ...prev,\n      [`${fieldPrefix}City`]: city,\n      [`${fieldPrefix}State`]: state || prev[`${fieldPrefix}State`]\n    }));\n    \n    if (sameAsShipping && type === 'shipping') {\n      setFormData(prev => ({\n        ...prev,\n        billingCity: city,\n        billingState: state || prev.billingState\n      }));\n    }\n    \n    setShowSuggestions(false);\n    validateField(`${fieldPrefix}City`, city);\n    if (state) {\n      validateField(`${fieldPrefix}State`, state);\n    }\n  };\n\n  const handlePincodeChange = (e: React.ChangeEvent<HTMLInputElement>, type: 'shipping' | 'billing') => {\n    const { value } = e.target;\n    const fieldPrefix = type === 'shipping' ? 'shipping' : 'billing';\n    \n    setFormData(prev => ({\n      ...prev,\n      [`${fieldPrefix}Pincode`]: value\n    }));\n\n    // Auto-populate city and state for Indian addresses\n    if (formData[`${fieldPrefix}Country` as keyof CheckoutFormData] === 'IN' && value.length === 6) {\n      const location = getLocationFromPincode(value);\n      if (location) {\n        const newFormData = {\n          ...formData,\n          [`${fieldPrefix}City`]: location.city,\n          [`${fieldPrefix}State`]: location.state,\n          [`${fieldPrefix}Pincode`]: value\n        };\n        \n        if (sameAsShipping && type === 'shipping') {\n          newFormData.billingCity = location.city;\n          newFormData.billingState = location.state;\n          newFormData.billingPincode = value;\n        }\n        \n        setFormData(newFormData);\n        validateField(`${fieldPrefix}City`, location.city);\n        validateField(`${fieldPrefix}State`, location.state);\n        validateField(`${fieldPrefix}Pincode`, value);\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate all fields\n    const validationErrors = validateCheckoutForm(formData);\n    setErrors(validationErrors);\n    \n    // Mark all fields as touched\n    const allTouched = Object.keys(formData).reduce((acc, key) => {\n      acc[key] = true;\n      return acc;\n    }, {} as { [key: string]: boolean });\n    setTouched(allTouched);\n\n    // If there are any errors, don't submit\n    if (Object.keys(validationErrors).length > 0) {\n      return;\n    }\n\n    // Proceed with form submission\n    try {\n      // Your form submission logic here\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  const getInputClassName = (fieldName: string) => {\n    const baseClasses = \"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 text-black\";\n    const errorClasses = touched[fieldName] && errors[fieldName] \n      ? \"border-red-500 focus:ring-red-200\" \n      : \"border-gray-300 focus:ring-gray-200\";\n    return `${baseClasses} ${errorClasses}`;\n  };\n\n  const handleRazorpayPayment = async () => {\n    try {\n      const options = {\n        key: process.env.NEXT_PUBLIC_RAZORPAY_KEY_ID,\n        amount: 50000, // amount in smallest currency unit (paise for INR)\n        currency: \"INR\",\n        name: \"Your Store Name\",\n        description: \"Order Payment\",\n        handler: function(response: any) {\n          console.log(\"Payment Success:\", response);\n          // Handle successful payment\n        },\n        prefill: {\n          name: formData.shippingName,\n          email: formData.shippingEmail,\n          contact: formData.shippingPhone\n        },\n        theme: {\n          color: \"#111827\" // matches bg-gray-900\n        }\n      };\n\n      const paymentObject = new (window as any).Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      console.error(\"Payment failed:\", error);\n    }\n  };\n\n  const handlePaymentMethodChange = (method: 'cod' | 'razorpay') => {\n    setFormData(prev => ({\n      ...prev,\n      paymentMethod: method\n    }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-8\">\n      {/* Shipping Address Section */}\n      <div className=\"space-y-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Shipping Address</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Full Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"shippingName\"\n              value={formData.shippingName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={getInputClassName('shippingName')}\n              required\n            />\n            {touched.shippingName && errors.shippingName && (\n              <div className=\"text-sm text-red-500\">{errors.shippingName}</div>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              name=\"shippingEmail\"\n              value={formData.shippingEmail}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={getInputClassName('shippingEmail')}\n              required\n            />\n            {touched.shippingEmail && errors.shippingEmail && (\n              <div className=\"text-sm text-red-500\">{errors.shippingEmail}</div>\n            )}\n          </div>\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Phone\n            </label>\n            <input\n              type=\"tel\"\n              name=\"shippingPhone\"\n              value={formData.shippingPhone}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={getInputClassName('shippingPhone')}\n              required\n            />\n            {touched.shippingPhone && errors.shippingPhone && (\n              <div className=\"text-sm text-red-500\">{errors.shippingPhone}</div>\n            )}\n          </div>\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Address\n            </label>\n            <textarea\n              name=\"shippingAddress\"\n              value={formData.shippingAddress}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              rows={3}\n              className={getInputClassName('shippingAddress')}\n              required\n            />\n            {touched.shippingAddress && errors.shippingAddress && (\n              <div className=\"text-sm text-red-500\">{errors.shippingAddress}</div>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Country\n            </label>\n            <select\n              name=\"shippingCountry\"\n              value={formData.shippingCountry}\n              onChange={handleShippingChange}\n              className={getInputClassName('shippingCountry')}\n              required\n            >\n              {countries.map(country => (\n                <option key={country.code} value={country.code}>\n                  {country.name}\n                </option>\n              ))}\n            </select>\n            {touched.shippingCountry && errors.shippingCountry && (\n              <div className=\"text-sm text-red-500\">{errors.shippingCountry}</div>\n            )}\n          </div>\n          <div className=\"relative\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              City\n            </label>\n            <input\n              type=\"text\"\n              name=\"shippingCity\"\n              value={formData.shippingCity}\n              onChange={(e) => handleCityInputChange(e, 'shipping')}\n              onBlur={(e) => {\n                setTimeout(() => setShowSuggestions(false), 200);\n                handleBlur(e);\n              }}\n              className={getInputClassName('shippingCity')}\n              required\n            />\n            {showSuggestions && formData.shippingCountry === 'IN' && citySuggestions.length > 0 && (\n              <ul className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-auto\">\n                {citySuggestions.map((city) => (\n                  <li\n                    key={city}\n                    className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer text-black\"\n                    onClick={() => handleCitySelect(city, 'shipping')}\n                  >\n                    {city}\n                  </li>\n                ))}\n              </ul>\n            )}\n            {touched.shippingCity && errors.shippingCity && (\n              <div className=\"text-sm text-red-500\">{errors.shippingCity}</div>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              State\n            </label>\n            <input\n              type=\"text\"\n              name=\"shippingState\"\n              value={formData.shippingState}\n              onChange={handleShippingChange}\n              onBlur={handleBlur}\n              className={getInputClassName('shippingState')}\n              required\n              readOnly={formData.shippingCountry === 'IN'}\n            />\n            {touched.shippingState && errors.shippingState && (\n              <div className=\"text-sm text-red-500\">{errors.shippingState}</div>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              PIN Code\n            </label>\n            <input\n              type=\"text\"\n              name=\"shippingPincode\"\n              value={formData.shippingPincode}\n              onChange={(e) => handlePincodeChange(e, 'shipping')}\n              onBlur={handleBlur}\n              className={getInputClassName('shippingPincode')}\n              maxLength={6}\n              required\n            />\n            {touched.shippingPincode && errors.shippingPincode && (\n              <div className=\"text-sm text-red-500\">{errors.shippingPincode}</div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Same as Shipping Checkbox */}\n      <div className=\"flex items-center\">\n        <input\n          type=\"checkbox\"\n          id=\"sameAsShipping\"\n          checked={sameAsShipping}\n          onChange={handleSameAsShippingChange}\n          className=\"h-4 w-4 rounded border-gray-300 text-gray-900 focus:ring-gray-500\"\n        />\n        <label htmlFor=\"sameAsShipping\" className=\"ml-2 text-sm text-gray-700\">\n          Billing address same as shipping\n        </label>\n      </div>\n\n      {/* Billing Address Section */}\n      {!sameAsShipping && (\n        <BillingAddressForm \n          formData={formData}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n          getInputClassName={getInputClassName}\n          errors={errors}\n          touched={touched}\n        />\n      )}\n\n      {/* Payment Method Section */}\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Payment Method</h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* COD Option */}\n          <button\n            type=\"button\"\n            onClick={() => handlePaymentMethodChange('cod')}\n            className={`flex items-center justify-between p-4 border rounded-lg ${\n              formData.paymentMethod === 'cod'\n                ? 'border-gray-900 bg-gray-50'\n                : 'border-gray-200 hover:border-gray-300'\n            }`}\n          >\n            <div className=\"flex items-center gap-3\">\n              <BiMoney className=\"w-6 h-6 text-gray-700\" />\n              <div className=\"text-left\">\n                <div className=\"font-medium text-gray-900\">Cash on Delivery</div>\n                <div className=\"text-sm text-gray-500\">Extra ₹49 COD charges</div>\n              </div>\n            </div>\n            <div className={`w-4 h-4 rounded-full border-2 ${\n              formData.paymentMethod === 'cod'\n                ? 'border-gray-900 bg-gray-900'\n                : 'border-gray-300'\n            }`} />\n          </button>\n\n          {/* Razorpay Option */}\n          <button\n            type=\"button\"\n            onClick={() => handlePaymentMethodChange('razorpay')}\n            className={`flex items-center justify-between p-4 border rounded-lg ${\n              formData.paymentMethod === 'razorpay'\n                ? 'border-gray-900 bg-gray-50'\n                : 'border-gray-200 hover:border-gray-300'\n            }`}\n          >\n            <div className=\"flex items-center gap-3\">\n              <FaCreditCard className=\"w-6 h-6 text-gray-700\" />\n              <div className=\"text-left\">\n                <div className=\"font-medium text-gray-900\">Pay Online</div>\n                <div className=\"text-sm text-gray-500\">Cards, UPI, NetBanking</div>\n              </div>\n            </div>\n            <div className={`w-4 h-4 rounded-full border-2 ${\n              formData.paymentMethod === 'razorpay'\n                ? 'border-gray-900 bg-gray-900'\n                : 'border-gray-300'\n            }`} />\n          </button>\n        </div>\n      </div>\n\n      {/* Submit Button */}\n      <button\n        type=\"submit\"\n        className=\"w-full bg-gray-900 text-white py-3 px-4 rounded-md hover:bg-gray-800 transition-colors\"\n      >\n        {formData.paymentMethod === 'cod' ? 'Place Order' : 'Proceed to Pay'}\n      </button>\n    </form>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2086, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/components/checkout/OrderSummary.tsx"],"sourcesContent":["'use client';\n\nimport { CartItem } from '@/context/CartContext';\nimport Image from 'next/image';\n\ninterface OrderSummaryProps {\n  items: CartItem[];\n}\n\nexport default function OrderSummary({ items }: OrderSummaryProps) {\n  const subtotal = items.reduce((total, item) => \n    total + (item.product.price * item.quantity), 0\n  );\n  \n  const shipping = 0; // Free shipping\n  const tax = subtotal * 0.18; // 18% GST\n  const total = subtotal + shipping + tax;\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-sm space-y-4\">\n      <h2 className=\"text-lg font-semibold text-black\">Order Summary</h2>\n\n      {/* Items */}\n      <div className=\"space-y-4\">\n        {items.map((item) => (\n          <div key={`${item.product._id}-${item.selectedColor}-${item.selectedSize}`} \n            className=\"flex gap-4\"\n          >\n            <div className=\"relative w-16 h-16 flex-shrink-0\">\n              <Image\n                src={item.product.imageUrl}\n                alt={item.product.name}\n                fill\n                className=\"object-cover rounded\"\n              />\n            </div>\n            <div className=\"flex-grow\">\n              <h3 className=\"text-sm font-medium text-black\">{item.product.name}</h3>\n              <p className=\"text-sm text-gray-700\">\n                Qty: {item.quantity} × ₹{item.product.price.toFixed(2)}\n              </p>\n              {item.selectedSize && <p className=\"text-sm text-gray-700\">Size: {item.selectedSize}</p>}\n              {item.selectedColor && <p className=\"text-sm text-gray-700\">Color: {item.selectedColor}</p>}\n            </div>\n            <div className=\"text-sm font-medium text-black\">\n              ₹{(item.product.price * item.quantity).toFixed(2)}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Price Breakdown */}\n      <div className=\"border-t pt-4 space-y-2\">\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-700\">Subtotal</span>\n          <span className=\"text-black\">₹{subtotal.toFixed(2)}</span>\n        </div>\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-700\">Shipping</span>\n          <span className=\"text-green-600\">Free</span>\n        </div>\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-700\">Tax (18% GST)</span>\n          <span className=\"text-black\">₹{tax.toFixed(2)}</span>\n        </div>\n      </div>\n\n      {/* Total */}\n      <div className=\"border-t pt-4\">\n        <div className=\"flex justify-between font-semibold text-black\">\n          <span>Total</span>\n          <span>₹{total.toFixed(2)}</span>\n        </div>\n        <p className=\"text-xs text-gray-700 mt-1\">\n          Inclusive of all taxes\n        </p>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AAHA;;;AASe,SAAS,aAAa,EAAE,KAAK,EAAqB;IAC/D,MAAM,WAAW,MAAM,MAAM,CAAC,CAAC,OAAO,OACpC,QAAS,KAAK,OAAO,CAAC,KAAK,GAAG,KAAK,QAAQ,EAAG;IAGhD,MAAM,WAAW,GAAG,gBAAgB;IACpC,MAAM,MAAM,WAAW,MAAM,UAAU;IACvC,MAAM,QAAQ,WAAW,WAAW;IAEpC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAmC;;;;;;0BAGjD,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBACC,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAK,KAAK,OAAO,CAAC,QAAQ;oCAC1B,KAAK,KAAK,OAAO,CAAC,IAAI;oCACtB,IAAI;oCACJ,WAAU;;;;;;;;;;;0CAGd,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAkC,KAAK,OAAO,CAAC,IAAI;;;;;;kDACjE,8OAAC;wCAAE,WAAU;;4CAAwB;4CAC7B,KAAK,QAAQ;4CAAC;4CAAK,KAAK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;;;;;;;oCAErD,KAAK,YAAY,kBAAI,8OAAC;wCAAE,WAAU;;4CAAwB;4CAAO,KAAK,YAAY;;;;;;;oCAClF,KAAK,aAAa,kBAAI,8OAAC;wCAAE,WAAU;;4CAAwB;4CAAQ,KAAK,aAAa;;;;;;;;;;;;;0CAExF,8OAAC;gCAAI,WAAU;;oCAAiC;oCAC5C,CAAC,KAAK,OAAO,CAAC,KAAK,GAAG,KAAK,QAAQ,EAAE,OAAO,CAAC;;;;;;;;uBApBzC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC,EAAE,KAAK,YAAY,EAAE;;;;;;;;;;0BA2B9E,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;;oCAAa;oCAAE,SAAS,OAAO,CAAC;;;;;;;;;;;;;kCAElD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;0CAAiB;;;;;;;;;;;;kCAEnC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;;oCAAa;oCAAE,IAAI,OAAO,CAAC;;;;;;;;;;;;;;;;;;;0BAK/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;;oCAAK;oCAAE,MAAM,OAAO,CAAC;;;;;;;;;;;;;kCAExB,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;;;;;;;AAMlD"}},
    {"offset": {"line": 2346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2352, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/app/checkout/page.tsx"],"sourcesContent":["'use client';\n\nimport { useCart } from '@/context/CartContext';\nimport CheckoutForm from '@/components/checkout/CheckoutForm';\nimport OrderSummary from '@/components/checkout/OrderSummary';\n\nexport default function CheckoutPage() {\n  const { cartItems } = useCart();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-200 to-gray-300\">\n      <div className=\"container mx-auto px-4 py-32\">\n        <h1 className=\"text-2xl font-semibold mb-8 text-black\">Checkout</h1>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Checkout Form */}\n          <div className=\"lg:col-span-2\">\n            <CheckoutForm />\n          </div>\n\n          {/* Order Summary */}\n          <div className=\"lg:col-span-1\">\n            <OrderSummary items={cartItems} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IAE5B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAyC;;;;;;8BAEvD,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,8IAAA,CAAA,UAAY;;;;;;;;;;sCAIf,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,8IAAA,CAAA,UAAY;gCAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjC"}},
    {"offset": {"line": 2426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}