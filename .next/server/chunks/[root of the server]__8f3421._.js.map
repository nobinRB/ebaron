{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\ndeclare global {\n  var mongoose: {\n    conn: mongoose.Mongoose | null;\n    promise: Promise<mongoose.Mongoose> | null;\n  };\n}\n\nif (!process.env.MONGODB_URI) {\n  throw new Error('Please add your MONGODB_URI to .env');\n}\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then(() => mongoose);\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB; "],"names":[],"mappings":";;;AAAA;;AASA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,IAAM,yGAAA,CAAA,UAAQ;IAC1E;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/models/Product.ts"],"sourcesContent":["import mongoose, { Document, Schema } from 'mongoose';\n\ninterface IReview {\n  userId: mongoose.Types.ObjectId;\n  rating: number;\n  comment?: string;\n  createdAt: Date;\n}\n\nexport interface IProduct extends Document {\n  _id: mongoose.Types.ObjectId;\n  name: string;\n  description: string;\n  price: number;\n  imageUrl: string;\n  category: string;\n  stock: number;\n  ratings: number;\n  reviews: IReview[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst productSchema = new Schema<IProduct>({\n  name: {\n    type: String,\n    required: [true, 'Please provide a product name'],\n    trim: true,\n  },\n  description: {\n    type: String,\n    required: [true, 'Please provide a product description'],\n  },\n  price: {\n    type: Number,\n    required: [true, 'Please provide a product price'],\n    min: [0, 'Price cannot be negative'],\n  },\n  imageUrl: {\n    type: String,\n    required: [true, 'Please provide a product image URL'],\n  },\n  category: {\n    type: String,\n    required: [true, 'Please provide a product category'],\n  },\n  stock: {\n    type: Number,\n    required: [true, 'Please provide stock quantity'],\n    min: [0, 'Stock cannot be negative'],\n  },\n  ratings: {\n    type: Number,\n    default: 0,\n  },\n  reviews: [{\n    userId: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      required: true,\n    },\n    rating: {\n      type: Number,\n      required: true,\n      min: 1,\n      max: 5,\n    },\n    comment: String,\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  }],\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.Product || mongoose.model<IProduct>('Product', productSchema); "],"names":[],"mappings":";;;AAAA;;AAuBA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAAW;IACzC,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAAgC;QACjD,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAAuC;IAC1D;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAiC;QAClD,KAAK;YAAC;YAAG;SAA2B;IACtC;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAqC;IACxD;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAoC;IACvD;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAgC;QACjD,KAAK;YAAC;YAAG;SAA2B;IACtC;IACA,SAAS;QACP,MAAM;QACN,SAAS;IACX;IACA,SAAS;QAAC;YACR,QAAQ;gBACN,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;gBAC3B,KAAK;gBACL,UAAU;YACZ;YACA,QAAQ;gBACN,MAAM;gBACN,UAAU;gBACV,KAAK;gBACL,KAAK;YACP;YACA,SAAS;YACT,WAAW;gBACT,MAAM;gBACN,SAAS,KAAK,GAAG;YACnB;QACF;KAAE;AACJ,GAAG;IACD,YAAY;AACd;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAW,WAAW"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/nobinsunny/Desktop/git-e/src/app/api/products/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport connectDB from '@/lib/mongodb';\nimport Product from '@/models/Product';\nimport type { IProduct } from '@/models/Product';\n\nexport async function GET() {\n  try {\n    console.log('Connecting to database...');\n    const mongoose = await connectDB();\n    if (!mongoose) {\n      console.error('Database connection failed');\n      return NextResponse.json(\n        { error: 'Database connection failed' },\n        { status: 500 }\n      );\n    }\n\n    console.log('Fetching products...');\n    const products = await Product.find({}).lean().exec();\n    \n    // Debug log to see what's in the database\n    products.forEach(product => {\n      console.log(`Product: ${product.name}, Image: ${product.imageUrl}`);\n    });\n    \n    if (!products || products.length === 0) {\n      return NextResponse.json([]);\n    }\n\n    return NextResponse.json(products);\n  } catch (error) {\n    console.error('Failed to fetch products:', error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Failed to fetch products' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    await connectDB();\n    const body = await request.json();\n    \n    const product = await Product.create(body);\n    return NextResponse.json(product.toObject(), { status: 201 });\n  } catch (error) {\n    console.error('Failed to create product:', error);\n    return NextResponse.json(\n      { error: 'Failed to create product' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAS,AAAD;QAC/B,IAAI,CAAC,UAAU;YACb,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,0HAAA,CAAA,UAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI;QAEnD,0CAA0C;QAC1C,SAAS,OAAO,CAAC,CAAA;YACf,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC,SAAS,EAAE,QAAQ,QAAQ,EAAE;QACpE;QAEA,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,EAAE;QAC7B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAA2B,GAC7E;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,UAAU,MAAM,0HAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,QAAQ,IAAI;YAAE,QAAQ;QAAI;IAC7D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}